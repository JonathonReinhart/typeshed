from _typeshed import Incomplete

class BitStreamReader:
    substream: Incomplete
    total_size: int
    buffer: str
    def __init__(self, substream) -> None: ...
    def close(self) -> None: ...
    def tell(self): ...
    def seek(self, pos, whence: int = 0) -> None: ...
    def read(self, count): ...

class BitStreamWriter:
    substream: Incomplete
    buffer: Incomplete
    pos: int
    def __init__(self, substream) -> None: ...
    def close(self) -> None: ...
    def flush(self) -> None: ...
    def tell(self): ...
    def seek(self, pos, whence: int = 0) -> None: ...
    def write(self, data) -> None: ...
